name: Continuous Integration

on: [push, pull_request]

jobs:
  lint-and-setup:
    name: Linting and Setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Protoc
        uses: arduino/setup-protoc@v2

      - name: Cache Rust dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt, clippy

      - name: Lint with rustfmt and clippy
        run: |
          cargo +nightly fmt
          cargo +nightly clippy

  test:
    name: Execute the test script
    runs-on: ubuntu-latest
    env:
      SPIFFE_ENDPOINT_SOCKET: unix:/tmp/spire-agent/public/api.sock
    steps:
      - uses: actions/checkout@v3

      - name: Install Protoc
        uses: arduino/setup-protoc@v2

      - name: Cache Rust dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Run SPIRE
        run: |
          ./scripts/run-spire.sh &

      - name: Run spiffe Integration Tests
        run: |
          RUST_BACKTRACE=1 cargo test --features integration-tests

      - name: Cleanup SPIRE
        run: ./scripts/cleanup-spire.sh
